        BankApp
      -----------

      1. Create a new project - ng new bankapp-frontend
      2. cd bankapp-frontend
      3. code .
      4. run the project - ng s -o
      5. clear the code in app.component.html
      6. install the 3rd party libraries
          i) bootstrap - copy and paste bootstrap link
          ii) fontawesome - copy and paste cdnjs link
          iii) googlefonts - copy and paste google fonts link

      7. create component
          -> rgister - ng g c register
          ->login - ng g c login
          ->dashboard - ng g c dashboard
          ->transactions - ng g c transactions
          ->pagenotfound - ng g c pagenotfound

      8. Path Setup
          setup path for each component in app-routing.module.ts

      9. use router-outlet in app.component.html

      10. page designing

      11. Reactive forms
            Reactive forms provide a model driven approach to handling form inputs whose value change over time. Reactive forms are built around observable streams, where form inputs and values are provided an stream of input values, which can be accessed synchronously.

            -> app.module.ts

                @NgModule ({
                        imports :[
                            //other imports 
                                ReactiveFormsModule
                        ],
                })

                ->FormGroup - in ts
                ->FormArray - in ts
                ->FormControl -in html

                ->FormBuilder
                    The FormBuilder provides syntactic sugar that shortenns creating instances of a FormControl, FormGroup, or FormArray. It reduces the amount if boilerplate needed to build complex forms.
                ->FormGroup
                    Constructs a new FormGroup instance. Accepts a single generic argument, which is an object containing all the keys and corresponding inner control types.
                ->*ngIf 



      12. Validators

      13. 